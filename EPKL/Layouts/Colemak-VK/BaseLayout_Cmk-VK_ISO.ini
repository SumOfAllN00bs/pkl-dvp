;
;;  Layout definitions
;;  for Portable Keyboard Layout by Farkas Máté [https://github.com/Portable-Keyboard-Layout]
;;  edition DreymaR (Øystein B Gadmar, 2015-)   [https://github.com/DreymaR/BigBagKbdTrixPKL]
;
;;  To use this layout, edit the EPKL_Layouts.ini 'layout = ' and/or Type/Mod/ID/etc entries.
;;  Alternatively, run EPKL in compactMode with the layout's files in the main program folder.
;
;;  This is an EPKL style layout.ini file
;;    - It may point to a base layout, Extend and DeadKey table files containing layout parts
;;    - The layout file specifies changes from the base layout, remaps and other layout info
;;    - A classic PKL layout.ini file can be reconstructed from the component files
;;    - If the layout file uses remaps, those must be redone manually for full reconstruction
;

[information]
layoutName      = VirtualKey Colemak (EU/ISO key codes)
layoutCode      = Cmk-VK-ISO
localeID        = 00000409

copyright       = DreymaR (GPL v4)
company         = Shai Coleman, DreymaR
homepage        = http://forum.colemak.com/viewtopic.php?id=1467
version         = 4.0

[pkl]
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
;baseLayout      = Colemak-VK\Cmk-VK_ANS
;remapsFile      = Files\_eD_Remap.ini
;extendFile      = Files\_eD_Extend.ini
;dkListFile      = Files\_eD_DeadKeys.ini
;stringFile      = Files\_eD_PwrStrings.ini

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
;;  The "mechanical layout" VirtualKey map is mainly for ANS(I)/ISO/JIS conversion.
;mapSC_layout    = Tarmak_1C_ISO	; Tarmak_#, Tarmak_#C_ISO
;mapSC_layout    = CmkCAW_ISO		; Angle_ISO, AWide_ISO, CmkCAW_ISO etc - see _eD_Remap.ini
;mapSC_extend    = AWide_ISO_ExtDV 	; Only "hard" (non-letter) mods. If DH Ext+V follows ^V, use _ExtDV.
;mapVK_mecSym    = ANS2ISO			; ANS2ISO, ISO2ANS - convert KbdType

;;  DreymaR's Cmk-IBM help images (5*14 keys @96dpi)
img_sizeWH      = 812,282			; (541,188 @64dpi)
;;  DreymaR's compact help images (3*10 keys @48dpi)
;img_sizeWH      = 292,85			; ISO-Angle 298,85. Others 292,85.
;;  Scaling factor for help images, in %. (96->64)dpi = 66.66%; (96->48)dpi = 50%
img_scale       = 100

;;  Background image (key caps etc) and a background color for the image panel
img_bgImage     = Files\ImgBackground\Bg_ISO_nice-tinted.png
;img_bgImage     = Files\ImgBackground\Bg_ISO_finger-eD-FShui.png
img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
icons_OnOff     = Files\ImgIcons\Co-2_
img_Extend1     = Files\ImgExtend\ISO_Ext1.png
img_Extend2     = Files\ImgExtend\ISO_Ext2.png
img_Extend3     = Files\ImgExtend\ISO_Ext3.png
img_Extend4     = Files\ImgExtend\_Empty_Ext.png
;img_DKeyDir     = .\DeadkeyImg
img_shftDir     = Files\ImgModStates\GrnBlob

[layout]
;SCAN = VKEY    	VirtualKey
SC029 = OEM_5   	VirtualKey	; US `~ (ANSI _3, ISO _5)
SC002 = 1       	VirtualKey	; 1
SC003 = 2       	VirtualKey	; 2
SC004 = 3       	VirtualKey	; 3
SC005 = 4       	VirtualKey	; 4
SC006 = 5       	VirtualKey	; 5
SC007 = 6       	VirtualKey	; 6
SC008 = 7       	VirtualKey	; 7
SC009 = 8       	VirtualKey	; 8
SC00a = 9       	VirtualKey	; 9
SC00b = 0       	VirtualKey	; 0
SC00c = OEM_PLUS	VirtualKey	; US -_ (ANSI _MINUS, ISO _PLUS)
SC00d = OEM_4   	VirtualKey	; US =+ (ANSI _PLUS, ISO _4)

SC010 = Q       	VirtualKey	; QWERTY Q
SC011 = W       	VirtualKey	; QWERTY W
SC012 = F       	VirtualKey	; QWERTY E
SC013 = P       	VirtualKey	; QWERTY R
SC014 = G       	VirtualKey	; QWERTY T
SC015 = J       	VirtualKey	; QWERTY Y
SC016 = L       	VirtualKey	; QWERTY U
SC017 = U       	VirtualKey	; QWERTY I
SC018 = Y       	VirtualKey	; QWERTY O
SC019 = OEM_3   	VirtualKey	; QWERTY P -> ;: (ANSI _1, ISO _3)
SC01a = OEM_6   	VirtualKey	; US [{ (ANSI _4, ISO _6)
SC01b = OEM_1   	VirtualKey	; US ]} (ANSI _6, ISO _1)

SC01e = A       	VirtualKey	; QWERTY A
SC01f = R       	VirtualKey	; QWERTY S
SC020 = S       	VirtualKey	; QWERTY D
SC021 = T       	VirtualKey	; QWERTY F
SC022 = D       	VirtualKey	; QWERTY G
SC023 = H       	VirtualKey	; QWERTY H
SC024 = N       	VirtualKey	; QWERTY J
SC025 = E       	VirtualKey	; QWERTY K
SC026 = I       	VirtualKey	; QWERTY L
SC027 = O       	VirtualKey	; US/QWERTY ;:
SC028 = OEM_7   	VirtualKey	; US '" (ANSI/ISO _7)
SC02b = OEM_2   	VirtualKey	; US \| (ANSI _5, ISO _2)

SC056 = OEM_102 	VirtualKey	; QWERTY <> (ISO _102)
SC02c = Z       	VirtualKey	; QWERTY Z
SC02d = X       	VirtualKey	; QWERTY X
SC02e = C       	VirtualKey	; QWERTY C
SC02f = V       	VirtualKey	; QWERTY V
SC030 = B       	VirtualKey	; QWERTY B
SC031 = K       	VirtualKey	; QWERTY N
SC032 = M       	VirtualKey	; QWERTY M
SC033 = OEM_COMMA	VirtualKey	; US ,<
SC034 = OEM_PERIOD	VirtualKey	; US .>
SC035 = OEM_MINUS	VirtualKey	; US /? (ANSI _2, ISO _MINUS)
SC039 = SPACE   	VirtualKey	; Space
SC053 = DECIMAL 	VirtualKey	; NumPad decimal key

;SC03a = BACK    	VirtualKey	; CapsLock as Backspace (CAPITAL -> BACK)
;SC03a = Extend  	Modifier	; CapsLock as the Extend key
